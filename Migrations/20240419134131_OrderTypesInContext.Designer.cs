// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using hhpw_be;

#nullable disable

namespace hhpw_be.Migrations
{
    [DbContext(typeof(HHPWDbContext))]
    [Migration("20240419134131_OrderTypesInContext")]
    partial class OrderTypesInContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("hhpw_be.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toblerone Cake",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Donut Shake",
                            Price = 6.99m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chicken Hibachi",
                            Price = 18.99m
                        },
                        new
                        {
                            Id = 4,
                            Name = "California Roll",
                            Price = 24.99m
                        });
                });

            modelBuilder.Entity("hhpw_be.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerEmail = "johnny@faucet.com",
                            CustomerId = 4,
                            CustomerName = "Johnny Faucet",
                            CustomerPhone = "606-600-0006",
                            DateClosed = new DateTime(2024, 4, 19, 8, 41, 31, 388, DateTimeKind.Local).AddTicks(7791),
                            IsClosed = true,
                            OrderTypeId = 2,
                            PaymentTypeId = 1,
                            Total = 24.44m
                        },
                        new
                        {
                            Id = 2,
                            CustomerEmail = "bro@keet.com",
                            CustomerId = 3,
                            CustomerName = "Bros Keet",
                            CustomerPhone = "838-830-0006",
                            IsClosed = false,
                            OrderTypeId = 1,
                            PaymentTypeId = 2,
                            Total = 56.44m
                        },
                        new
                        {
                            Id = 3,
                            CustomerEmail = "jim@jo.com",
                            CustomerId = 2,
                            CustomerName = "Jim Jo",
                            CustomerPhone = "002-387-0006",
                            DateClosed = new DateTime(2024, 4, 19, 8, 41, 31, 388, DateTimeKind.Local).AddTicks(7844),
                            IsClosed = true,
                            OrderTypeId = 3,
                            PaymentTypeId = 3,
                            Total = 93.44m
                        },
                        new
                        {
                            Id = 4,
                            CustomerEmail = "greg@gerg.com",
                            CustomerId = 1,
                            CustomerName = "Greg Gerg",
                            CustomerPhone = "499-399-0006",
                            IsClosed = false,
                            OrderTypeId = 3,
                            PaymentTypeId = 1,
                            Total = 28.44m
                        });
                });

            modelBuilder.Entity("hhpw_be.Models.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Walk-in"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Call-in"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mobile"
                        });
                });

            modelBuilder.Entity("hhpw_be.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Card"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PayPal"
                        });
                });

            modelBuilder.Entity("hhpw_be.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCashier")
                        .HasColumnType("boolean");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCashier = true,
                            Uid = "uid1"
                        },
                        new
                        {
                            Id = 2,
                            IsCashier = false,
                            Uid = "uid2"
                        },
                        new
                        {
                            Id = 3,
                            IsCashier = true,
                            Uid = "uid3"
                        },
                        new
                        {
                            Id = 4,
                            IsCashier = false,
                            Uid = "uid4"
                        });
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("integer");

                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.HasKey("ItemsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("ItemOrder");
                });

            modelBuilder.Entity("OrderPaymentType", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentTypesId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "PaymentTypesId");

                    b.HasIndex("PaymentTypesId");

                    b.ToTable("OrderPaymentType");
                });

            modelBuilder.Entity("OrderUser", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.HasKey("CustomerId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrderUser");
                });

            modelBuilder.Entity("hhpw_be.Models.OrderType", b =>
                {
                    b.HasOne("hhpw_be.Models.Order", null)
                        .WithMany("OrderTypes")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("ItemOrder", b =>
                {
                    b.HasOne("hhpw_be.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hhpw_be.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderPaymentType", b =>
                {
                    b.HasOne("hhpw_be.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hhpw_be.Models.PaymentType", null)
                        .WithMany()
                        .HasForeignKey("PaymentTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderUser", b =>
                {
                    b.HasOne("hhpw_be.Models.User", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hhpw_be.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("hhpw_be.Models.Order", b =>
                {
                    b.Navigation("OrderTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
